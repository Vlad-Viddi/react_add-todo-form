{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/NewTodo.js","api/users.js","App.js","api/todos.js","index.js"],"names":["TodoItem","task","user","key","id","className","classnames","completed","uncompleted","title","name","TodoList","tasks","map","NewTodo","state","type","placeholder","React","Component","users","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","userId","todo","find","App","addNewTask","status","setState","prevState","length","this","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9389194.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport propTypes from 'prop-types';\n\nconst TodoItem = ({ task, user }) => (\n  <li\n    key={task.id}\n  >\n    <div className={classnames('task', {\n      completed: task.completed, uncompleted: !task.completed,\n    })}\n    >\n      <div>{`Actual status: ${task.completed ? 'Done' : 'Not yet'}`}</div>\n      <div>{`Task: ${task.title}`}</div>\n      <div>{`Maintainer: ${user.name}`}</div>\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  user: propTypes.objectOf(propTypes.shape({\n    name: propTypes.string.isRequired,\n  })).isRequired,\n  task: propTypes.arrayOf(propTypes.shape({\n    completed: propTypes.bool.isRequired,\n    id: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ tasks }) => (\n  <ul>\n    {tasks.map(task => (\n      <TodoItem\n        task={task}\n        key={task.id}\n        user={task.user}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  tasks: propTypes.arrayOf(propTypes.shape({\n    id: propTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\n\nclass NewTodo extends React.Component {\n  state = {\n\n  }\n\n  // const ({ users, addNewTask }) = this.props;\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Enter a new todo\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default NewTodo;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport NewTodo from './components/NewTodo';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nconst preparedTodos = todos.map(todo => (\n  {\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    tasks: preparedTodos,\n  }\n\n  addNewTask = (task, userId, status) => {\n    this.setState(prevState => ({\n      tasks: [\n        ...prevState.tasks,\n        {\n          title: task,\n          user: users.find(user => user.id === userId),\n          id: prevState.tasks.length,\n          completed: status,\n        },\n      ],\n    }));\n  }\n\n  render() {\n    const { tasks } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <NewTodo\n          users={users}\n          addNewTask={this.addNewTask}\n        />\n        <TodoList tasks={tasks} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: true,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}